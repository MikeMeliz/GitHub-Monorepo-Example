name: SonarQube DotNet Scan

on:
  push:
    branches:
      - merge_requests
      - master
      - develop
    paths:
      - '.github/workflows/dotnet-scan.yaml'
      - '.gitignore'
      - 'comp-dotnet/*.sln'
      - 'comp-dotnet/project/*.cs*'

  workflow_dispatch:

env:
  SONAR_HOST_URL: <SONARQUBE_URL>
  SONAR_TOKEN: <SONARQUBE_TOKEN>
jobs:
  scan-dotnet:
    name: SonarQube Scan for .NET Core
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: cd comp-dotnet
        run: cd comp-dotnet
      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1'

      - name: Install SonarScanner for .NET Core
        run: |
          dotnet tool install --global dotnet-sonarscanner
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"demo:gitlab-ci-mono-dotnet" /n:"GitLab-CI / monorepo .Net Core" /d:"sonar.host.url=${{ env.SONAR_HOST_URL }}" /d:"sonar.login=${{ env.SONAR_TOKEN }}"
          dotnet build dotnetcore-sample.sln
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
      # - name: Build and Analyze with SonarScanner for .NET Core
      #   run: |
      #     cd ./comp-dotnet
      #     dotnet sonarscanner begin /k:"demo:gitlab-ci-mono-dotnet" /n:"GitLab-CI / monorepo .Net Core" /d:"sonar.host.url=${{ env.SONAR_HOST_URL }}" /d:"sonar.login=${{ env.SONAR_TOKEN }}" /d:"sonar.qualitygate.wait=true"
      #     dotnet build dotnetcore-sample.sln
      #     dotnet sonarscanner end /d:"sonar.login=${{ env.SONAR_TOKEN }}"
      #     cd -
