name: SonarQube DotNet Scan

on:
  push:
    branches:
      - merge_requests
      - master
      - develop
    paths:
      - '.github/workflows/dotnet-scan.yaml'
      - '.gitignore'
      - 'comp-dotnet/*.sln'
      - 'comp-dotnet/project/*.cs*'

  workflow_dispatch:

env:
  SONAR_HOST_URL: <SONARQUBE_URL>
  SONAR_TOKEN: <SONARQUBE_TOKEN>
jobs:
  scan-dotnet:
    name: SonarQube Scan for .NET Core
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: cd comp-dotnet
        run: cd comp-dotnet
      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1'

      - name: Install SonarScanner for .NET Core
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: Set up Java for SonarScanner
        uses: actions/setup-java@v2
        with:
          java-version: '11'

      - name: Build and Analyze with SonarScanner for .NET Core
        working-directory: ./comp-dotnet
        run: |
          dotnet sonarscanner begin /k:"demo:gitlab-ci-mono-dotnet" /n:"GitLab-CI / monorepo .Net Core" /d:"sonar.host.url=${{ env.SONAR_HOST_URL }}" /d:"sonar.login=${{ env.SONAR_TOKEN }}" /d:"sonar.qualitygate.wait=true"
          dotnet build dotnetcore-sample.sln
          dotnet sonarscanner end /d:"sonar.login=${{ env.SONAR_TOKEN }}"
          cd -
